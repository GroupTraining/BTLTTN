<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>